pipeline {
    agent any

    tools {
        nodejs 'nodejs'
    }

    environment {
        SCANNER_HOME=tool 'sonar-scanner'
        AWS_DEFAULT_REGION = 'us-east-1'
        AWS_REPO_NAME = credentials('ECR_REPO1')
        AWS_ACCOUNT_ID = credentials('ACCOUNT_ID')
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/"
    }


    stages {
        stage ('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage ('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'github-cred', url: 'https://github.com/merajaprasad/eks-threetierapp-deployment.git'
            }
        }

        stage ('Trivy FS Scan') {
            steps {
                dir('Application-Code/frontend') {
                    sh 'trivy fs --format table -o trivyfs.html .'
                }
            }
        }

        stage ('SonarQube Analysis') {
            steps {
                dir('Application-Code/frontend') {
                    withSonarQubeEnv('sonar-server') {
                        sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=frontend -Dsonar.projectKey=frontend '''
                    }
                }
            }
        }

        stage ('Quality Check') {
            steps {
                waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
            }
        }

        stage('OWASP Dependency Check') {
            steps {
                dir('Application-Code/frontend') {
                    dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'DP-Check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }

        stage ('Docker Image Build') {
            steps {
                script {
                    dir('Application-Code/frontend') {
                        sh 'docker system prune -f'
                        sh 'docker container prune -f'
                        sh 'docker build -t ${AWS_REPO_NAME} .'
                    }
                }
            }
        }

        stage ('Docker Push') {
            steps {
                script {
                    sh 'aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}'
                    sh 'docker tag ${AWS_REPO_NAME} ${REPOSITORY_URI}${AWS_REPO_NAME}:${BUILD_NUMBER}'
                    sh 'docker push ${REPOSITORY_URI}${AWS_REPO_NAME}:${BUILD_NUMBER}'
                }
            }
        }

        stage ('Trivy Image Scan') {
            steps {
                sh 'trivy image --format table -o trivyimage.html ${REPOSITORY_URI}${AWS_REPO_NAME}:${BUILD_NUMBER}'
            }
        }

        stage ('Checkout Code') {
            steps {
                git branch: 'main', credentialsId: 'github-cred', url: 'https://github.com/merajaprasad/eks-threetierapp-deployment.git'
            }
        }

        stage ('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "eks-threetierapp-deployment"
                GIT_USER_NAME = "merajaprasad"
            }
            steps {
                dir('ManifestFiles/Frontend') {
                    withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            git config --global user.name "merajaprasad"
                            git config --global user.mail "prasad.rp731@gmail.com"
                            BUILD_NUMBER=${BUILD_NUMBER}
                            echo $BUILD_NUMBER
                            IMAGE_TAG=$(grep -oP '(?<=frontend:)[^ ]+' deployment.yaml)
                            echo $IMAGE_TAG
                            sed -i "s/${AWS_REPO_NAME}:${IMAGE_TAG}/${AWS_REPO_NAME}:${BUILD_NUMBER}/" deployment.yaml
                            git add deployment.yaml
                            git commit -m "updating image to \${BUILD_NUMBER}"
                            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                        '''
                    }
                }
            }
        }
    }
}

