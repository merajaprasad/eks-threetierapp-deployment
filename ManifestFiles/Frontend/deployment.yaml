apiVersion: apps/v1 
kind: Deployment
metadata:
  name: frontend
  namespace: workshop
  labels:
    app: frontend   
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template: 
    metadata:
      name: frontend-pod
      labels: 
        app: frontend
        env: test 
    spec:
      containers: 
      - name: frontend
        image: merajaprasd/three-tier-frontend
        imagePullPolicy: Always
        env:
          - name: REACT_APP_BACKEND_URL
            value: "http://challenge.merajaprasad.in/api/tasks"
        ports: 
        - containerPort : 3000

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 1


        #       livenessProbe:
        #   httpGet:
        #     path: /health
        #     port: 3000
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        #   failureThreshold: 3
        #   successThreshold: 1
        # readinessProbe:
        #   httpGet:
        #     path: /ready
        #     port: 3000
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   timeoutSeconds: 5
        #   failureThreshold: 3
        #   successThreshold: 1




## To ensure that the backend service is correctly responding by testing it from within the cluster by creating a Temporary POD.
# kubectl run -it --rm --image=curlimages/curl test-pod -- curl -s http://backend-svc.workshop.svc.cluster.local:3500/health

